{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":".md-typeset h1, .md-content__button { display: none; } Home Terraform version check (tfvc) is a reporting tool to identify available updates for providers and modules referenced in your Terraform code. It provides clear warning/failure output and resolution guidance for any issues it detects. Warning This documentation is a work in progress. There's not much here at the moment!","title":"Home"},{"location":"#home","text":"Terraform version check (tfvc) is a reporting tool to identify available updates for providers and modules referenced in your Terraform code. It provides clear warning/failure output and resolution guidance for any issues it detects. Warning This documentation is a work in progress. There's not much here at the moment!","title":"Home"},{"location":"getting-started/","text":"Getting Started Installation Install with Homebrew on MacOS or Linux. brew install tfverch/tfvc/tfvc Install with Go go install github.com/tfverch/tfvc@latest Usage tfvc will scan the specified directory and report on the version configuration for providers and modules. Info tfvc will return a non-zero exit status if if finds any issues, otherwise the exit status will be zero. The following example will run tfvc against the current working directory ( . ). tfvc . Docker usage As an alternative to installing and running tfvc on your system, you can run it in a Docker container. The following example will mount the current working directory ( $(pwd) ) in the container and run tfvc . docker run --rm -it -v \" $( pwd ) :/src\" tfverch/tfvc /src","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#installation","text":"Install with Homebrew on MacOS or Linux. brew install tfverch/tfvc/tfvc Install with Go go install github.com/tfverch/tfvc@latest","title":"Installation"},{"location":"getting-started/#usage","text":"tfvc will scan the specified directory and report on the version configuration for providers and modules. Info tfvc will return a non-zero exit status if if finds any issues, otherwise the exit status will be zero. The following example will run tfvc against the current working directory ( . ). tfvc .","title":"Usage"},{"location":"getting-started/#docker-usage","text":"As an alternative to installing and running tfvc on your system, you can run it in a Docker container. The following example will mount the current working directory ( $(pwd) ) in the container and run tfvc . docker run --rm -it -v \" $( pwd ) :/src\" tfverch/tfvc /src","title":"Docker usage"},{"location":"usage/","text":"Usage","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"}]}